grammar net.sourceforge.ufoai.UFOScript with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate ufoScript "http://ufoai.org/UFOScript"

// starting point for parsing a ufo script file
UFOScript:
	{UFOScript} roots+=UFONode*;

UFONode:
	(=>type=ID (
		((=>name=ID)?
			(("{" ((nodes+=UFONode)* | code=TokenList) "}")
			| ('(' values+=Value* ')'))
		)
		| (value=Value)
	));

// this is only a hack
TokenList:
	{TokenList} (statements+=Value)*;

Value:
	ValueBoolean
//	| ValueNull
	| ValueNumber
	| ValueNamedConst
	| ValueReference
	| ValueCode
	| ValueString;

ValueCode:
	value = CODE;

ValueString:
	value=STRING;

ValueBoolean:
	value=UFO_BOOLEAN;

ValueNumber:
	value=Double;

ValueReference:
	value=[UFONode];

ValueNamedConst:
	value=NAMED_CONST;

//ValueNull:
//	value=NULL;

/* ==================== terminals ================================ */

Double:
	(INT | REAL);

/* ==================== terminals ================================ */

terminal NAMED_CONST:
	('A'..'Z') ('A'..'Z' | '0'..'9' | '_')*;

terminal REAL:
	('-'|'+')?('0'..'9')* '.' ('0'..'9')+;

terminal INT returns ecore::EInt:
	('-'|'+')?('0'..'9')+;

terminal UFO_BOOLEAN:
	'true' | 'false';

//terminal NULL:
//	'null';

terminal CODE:
	('*'|'#'|'%') (ID | '.' | ':' | '@')*;

terminal ID:
	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'/'|'0'..'9')*;
